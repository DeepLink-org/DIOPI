name: diopi ci
on:
  workflow_dispatch:
  push:
    branches:
      - main
    if: 'contains(github.event.head_commit.message, "ci") || contains(github.event.head_commit.message, "CI")'
  pull_request:
    branches:
      - main

env:
  NFS_PATH: '/mnt/cache/share/parrotsci/github/cibuild/${{ github.repository }}'
  NFS_PATH_LUSTRE: '/mnt/lustre/share/parrotsci/github/cibuild/${{ github.repository }}'
  ENV_PATH: '/mnt/cache/share/platform/cienv'
  ENV_NAME: 'pt1.10v2'
  ENV_NAME_MMCV: 'pt1.11v1'
  GPU_REQUESTS: 1
  SLURM_PAR_SH1984: ${{ vars.SLURM_PAR_SH1984 }}
  SLURM_PAR_CAMB: ${{ vars.SLURM_PAR_CAMB }}
  CLUSTER_1984: SH1984
  CLUSTER_CAMB: CAMB
  BUILD_TEST1: build_test
  BUILD_TEST2: build_test_dy
  BUILD_TEST3: build_mmcv_ext
  GEN_DATA: DIOPI-TEST/python/data

jobs:
  Rsync:
    name: Rsync code
    runs-on: tps-diopi-ci
    steps:
      - name: clone repo
        run: |
          cd ${GITHUB_WORKSPACE} && rm -rf DIOPI && git clone git@github.com:OpenComputeLab/DIOPI.git && cd DIOPI
          if [ $GITHUB_EVENT_NAME == "pull_request" ]; then
          git checkout ${{ github.event.pull_request.head.sha }} && git merge --no-edit main
          else
          git checkout ${{ github.sha }} &&  git merge --no-edit main
          fi
          git submodule update --init --recursive && cd DIOPI-TEST/third_party && rm -rf mmcv_diopi && git clone git@github.com:OpenComputeLab/mmcv_diopi.git
      - name: ci interruptible and support pr ci
        run: |
          cd ${GITHUB_WORKSPACE}/DIOPI && bash scripts/ci_interruptible.sh
        env:
          GITHUB_TOKEN: "${{ secrets.CI_TOKEN }}"
      - name: Rsync to Server
        run: |
          ssh ${CLUSTER_1984} "mkdir -p ${NFS_PATH}/${GITHUB_RUN_NUMBER}/source"
          rsync -a --delete ${GITHUB_WORKSPACE}/DIOPI/ ${CLUSTER_1984}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/source/
          ssh ${CLUSTER_CAMB} "mkdir -p ${NFS_PATH}/${GITHUB_RUN_NUMBER}/source"
          rsync -a --delete ${GITHUB_WORKSPACE}/DIOPI/ ${CLUSTER_CAMB}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/source/

  lint:
    name: lint
    runs-on: tps-diopi-ci
    needs: [Rsync]
    steps:
      - name: lint
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          cd ${NFS_PATH}/ && ls -al && find ${NFS_PATH}/ -maxdepth 1 -mmin +300 -type d |xargs rm -rf
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R source ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          export CI=true
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 bash -c 'cd DIOPI-TEST && bash scripts/ci_script.sh py-lint \
          && bash scripts/ci_script.sh cpp-lint && cd ../DIOPI-IMPL \ && bash scripts/ci_script.sh cpp-lint' \
          && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} \
          || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )
          """

  Build-Nvidia:
    name: Build-Nvidia
    runs-on:  tps-diopi-ci
    needs: [Rsync]
    steps:
      - name: build
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${BUILD_TEST1} && cp -R source ${BUILD_TEST1} && cd ${BUILD_TEST1}
          export CI=true
          export DIOPI_BUILD_TESTRT=ON
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 bash -c 'cd DIOPI-IMPL && bash scripts/build_impl.sh torch' || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${BUILD_TEST1} && exit 1 )
          """
      - name: build-dyload
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${BUILD_TEST2} && cp -R source ${BUILD_TEST2} && cd ${BUILD_TEST2}
          export CI=true
          export DIOPI_BUILD_TESTRT=ON
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 bash -c 'cd DIOPI-IMPL && bash scripts/build_impl.sh torch_dyload' || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${BUILD_TEST2} && exit 1 )
          """

  Build-Camb:
    name: Build-Camb
    runs-on: tps-diopi-ci
    needs: [Rsync]
    steps:
      - name: Build
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${NFS_PATH}/ && ls -al && find ${NFS_PATH}/ -maxdepth 1 -mmin +300 -type d |xargs rm -rf
          source /mnt/cache/share/platform/env/camb_ci_diopi_impl
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${BUILD_TEST1} && cp -R source ${BUILD_TEST1} && cd ${BUILD_TEST1}
          export CI=true
          export DIOPI_BUILD_TESTRT=ON
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=10 bash -c 'cd DIOPI-IMPL && bash scripts/build_impl.sh camb' || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${BUILD_TEST1} && exit 1 )
          """

  Build-Mmcv-Ext-Nvidia:
    name: Build-Mmcv-Ext-Nvidia
    runs-on: tps-diopi-ci
    needs: [Rsync]
    steps:
      - name: build
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME_MMCV}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${BUILD_TEST3} && cp -R source ${BUILD_TEST3} && cd ${BUILD_TEST3}
          export CI=true
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 ls && cd DIOPI-TEST && bash scripts/build_mmcv.sh mmcv_ext || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${BUILD_TEST3} && exit 1 )
          """

  Op-Test-Mmcv-Ext-Nvidia:
    name: Op-Test-Mmcv-Ext-Nvidia
    runs-on: tps-diopi-ci
    needs: [Build-Mmcv-Ext-Nvidia]
    steps:
      - name: test
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          export CI=true
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME_MMCV}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && cd ${BUILD_TEST3}
          pip install -U pytest
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=40 --gres=gpu:${GPU_REQUESTS} ls && cd DIOPI-TEST && bash scripts/test_mmcv_ext.sh CUDA \
          && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${BUILD_TEST3} || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${BUILD_TEST3} && exit 1 )
          """

  Gen-Data:
    name: Gen-Data
    runs-on: tps-diopi-ci
    needs: [Build-Nvidia]
    steps:
      - name: gen-test-data
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          export CI=true
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && cd ${BUILD_TEST1}
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 --gres=gpu:${GPU_REQUESTS} bash -c 'cd DIOPI-TEST/python && python main.py --mode gen_data' \
          || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1} && git clean -xdf ${GEN_DATA} && exit 1 )
          """

  Op-Test-Nvidia:
    name: Op-Test-Nvidia
    runs-on: tps-diopi-ci
    needs: Gen-Data
    steps:
      - name: NHWC-32bit-test
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          export CI=true
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME} && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && cd ${BUILD_TEST1}
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 --gres=gpu:${GPU_REQUESTS} bash -c 'cd DIOPI-TEST/python && python main.py --mode run_test --fname batch_norm --nhwc &&
          python main.py --mode run_test --fname index_select --four_bytes && python main.py --mode run_test --fname arange --four_bytes'
          """
      - name: dyload-test
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          export CI=true
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME} && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && cd ${BUILD_TEST2}
          rm -rf ${GEN_DATA} && ln -s ${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1}/${GEN_DATA} ${GEN_DATA}
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST2}/DIOPI-TEST/lib
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 --gres=gpu:${GPU_REQUESTS} bash -c 'cd DIOPI-TEST/python && python main.py --mode run_test'
          """

  Rt-Test-Nvidia:
    name: Rt-Test-Nvidia
    runs-on: tps-diopi-ci
    needs: Build-Nvidia
    steps:
      - name: test
        run: |
          ssh ${CLUSTER_1984} """
          set -e
          export CI=true
          source ${ENV_PATH}/github_bashrc && source /mnt/cache/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && cd ${BUILD_TEST1}
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1984} --time=10 --gres=gpu:${GPU_REQUESTS} bash -c 'cd DIOPI-TEST/python && python main.py --mode utest'
          """

  Op-Test-Camb:
    name: Op-Test-Camb
    runs-on: tps-diopi-ci
    needs: [Gen-Data, Build-Camb]
    steps:
      - name: test
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          export CI=true
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && ls
          echo "rsync -avz ${CLUSTER_1984}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1}/${GEN_DATA} ${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1}/DIOPI-TEST/python/"
          rsync -avz ${CLUSTER_1984}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1}/${GEN_DATA} ${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1}/DIOPI-TEST/python/
          source /mnt/cache/share/platform/env/camb_ci_diopi_impl && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && cd ${BUILD_TEST1}
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=10 --gres=mlu:${GPU_REQUESTS} bash -c 'cd DIOPI-TEST/python && python main.py --mode run_test --impl_folder ${NFS_PATH_LUSTRE}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1}/DIOPI-IMPL/camb/' \
          && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1} && git clean -xdf ${GEN_DATA} || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1} && git clean -xdf ${GEN_DATA} && exit 1 )
          """

  Rt-Test-Camb:
    name: Rt-Test-Camb
    runs-on: tps-diopi-ci
    needs: Build-Camb
    steps:
      - name: test
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          export CI=true
          source /mnt/cache/share/platform/env/camb_ci_diopi_impl && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && cd ${BUILD_TEST1}
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=10 --gres=mlu:${GPU_REQUESTS} bash -c 'cd DIOPI-TEST/python && python main.py --mode utest' \
          """


