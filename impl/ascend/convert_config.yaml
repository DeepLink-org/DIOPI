- common_config:
    layout: NCHW

- diopiConvolution2d:
    dtype: (float64)->float16

- diopiConvolution2dBackward:
    dtype: (float64)->float16

- diopiAdaptiveAvgPool2d:
    dtype: (float64)->float32 , (float16)->float32

- diopiAdaptiveAvgPool2dBackward:
    dtype: (float64)->float32 , (float16)->float32

- diopiLtScalar:
    dtype: (bool)->float32

- diopiLtInpScalar:
    dtype: (bool)->float32

- diopiLt:
    dtype: (bool)->float32

- diopiLtInp:
    dtype: (bool)->float32

- diopiGtScalar:
    dtype: (bool)->float32

- diopiGtInpScalar:
    dtype: (bool)->float32

- diopiGt:
    dtype: (bool)->float32

- diopiGtInp:
    dtype: (bool)->float32

- diopiLeScalar:
    dtype: (bool)->float32

- diopiLeInpScalar:
    dtype: (bool)->float32

- diopiLe:
    dtype: (bool)->float32

- diopiLeInp:
    dtype: (bool)->float32

- diopiGeScalar:
    dtype: (bool)->float32

- diopiGeInpScalar:
    dtype: (bool)->float32

- diopiGe:
    dtype: (bool)->float32

- diopiGeInp:
    dtype: (bool)->float32

- diopiLogicalAnd:
    dtype: (float64, float32, float16, int64, int32, int16, int8, uint8)->bool

- diopiLogicalAndInp:
    dtype: (float64, float32, float16, int64, int32, int16, int8, uint8)->bool

- diopiLogicalOr:
    dtype: (float64, float32, float16, int64, int32, int16, int8, uint8)->bool

- diopiLogicalOrInp:
    dtype: (float64, float32, float16, int64, int32, int16, int8, uint8)->bool

- diopiLogicalNot:
    dtype: (float64, float32, float16, int64, int32, int16, int8, uint8)->bool

- diopiLogicalNotInp:
    dtype: (float64, float32, float16, int64, int32, int16, int8, uint8)->bool

- diopiBatchNorm:
    dtype: (float64)->float32

- diopiBatchNormBackward:
    dtype: (float64)->float32

- diopiLinear:
    dtype: (float16, float64)->float32

- diopiLinearBackward:
    dtype: (float16, float64)->float32

- diopiLinear:
    dtype: (float16, float64)->float32
    layout: NCHW

- diopiLinearBackward:
    dtype: (float16, float64)->float32
    layout: NCHW

- diopiAny:
    dtype: (float16, float32, float64, int16, int32, int64, uint8, int8)->bool

- diopiAll:
    dtype: (float16, float32, float64, int16, int32, int64, uint8, int8)->bool

- diopiLog:
    dtype: (float16, float32, int16, int32, int64, uint8, int8)->float64

- diopiLogInp:
    dtype: (float16, float32, int16, int32, int64, uint8, int8)->float64

- diopiLog2:
    dtype: (float64, int16, int32, int64, uint8, int8)->float32

- diopiLog2Inp:
    dtype: (float64, int16, int32, int64, uint8, int8)->float32

- diopiLog10:
    dtype: (float64, int16, int32, int64, uint8, int8)->float32

- diopiLog10Inp:
    dtype: (float64, int16, int32, int64, uint8, int8)->float32

- diopiNeg:
    dtype: (int8, int16, uint8, uint16, uint32, uint64)->int64, (float64)->float32, (complex32)->complex64

- diopiNegInp:
    dtype: (int8, int16, uint8, uint16, uint32, uint64)->int64, (float64)->float32, (complex32)->complex64

- diopiThreshold:
    dtype: (float64, int16, int64)->float32

- diopiThresholdInp:
    dtype: (float64)->float32, (int16, int64)->int32

- diopiThresholdBackward:
    dtype: (float64)->float32, (int16, int64)->int32

- diopiHardtanh:
    dtype: (float16)->float32

- diopiHardtanhInp:
    dtype: (float16)->float32

- diopiHardtanhBackward:
    dtype: (float16)->float32

- diopiTopk:
    dtype: (float32)->float64

- diopiGroupNorm:
    dtype: (float64)->float32
